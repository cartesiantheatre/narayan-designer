// Generated by Bisonc++ V6.00.00 on Thu, 17 Aug 2017 19:54:29 -0700

#ifndef NarayanLogicParser_h_included
#define NarayanLogicParser_h_included

// $insert baseclass
#include "NarayanLogicParserBase.h"
// $insert scanner.h
#include "NarayanLogicLexer.h"


#undef NarayanLogicParser
    // CAVEAT: between the baseclass-include directive and the 
    // #undef directive in the previous line references to NarayanLogicParser 
    // are read as NarayanLogicParserBase.
    // If you need to include additional headers in this file 
    // you should do so after these comment-lines.


class NarayanLogicParser: public NarayanLogicParserBase
{
    // $insert scannerobject
    NarayanLogicLexer d_scanner;
        
    public:
        NarayanLogicParser() = default;
        int parse();

    private:
        void error();                   // called on (syntax) errors
        int lex();                      // returns the next token from the
                                        // lexical scanner. 
        void print();                   // use, e.g., d_token, d_loc
        void exceptionHandler(std::exception const &exc);

    // support functions for parse():
        void executeAction__(int ruleNr);
        void errorRecovery__();
        void nextCycle__();
        void nextToken__();
        void print__();
};


#endif
